import 'dart:async';
import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;



class Album{
  final int id;
  final String title;

const Album({
  
  required this.id,
  required this.title,
});

factory Album.fromJson(Map<String, dynamic> json){
  return Album( id: json['id'], title: json['title']);
}
}



Future <Album> fetchAlbum(int albumid)async{
  final response = await http.get(Uri.parse('https://jsonplaceholder.typicode.com/album/1'));

 if(response.statusCode == 200){
  return Album.fromJson(jsonDecode(response.body));
 }else{
  throw Exception('Failure to Load Album!');
 }
}

Future<Album> updateAlbum(String title) async{
  final response = await http.put(Uri.parse('https://jsonplaceholder.typicode.com/album/1'),
  headers: <String,String>{
    'Content-type' : 'application/json;charset=UTF-8'},
    body: jsonEncode(<String,String>{
      'title' : title,
    }));

if (response.statusCode == 200){
  return Album.fromJson(jsonDecode(response.body));
}else{
  throw Exception('Failed to Load Album');
}

}


void main() => runApp(const MyApp());

class MyApp extends StatefulWidget{
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState()=> _MyAppState();
}

class _MyAppState extends State<MyApp>{
  final TextEditingController _controller = TextEditingController();
  late Future<Album> futureAlbum;



  @override
  void initState(){
    super.initState();
    futureAlbum = fetchAlbum(1);
  }
  
  @override
  Widget build(BuildContext context){
    return MaterialApp(
    title: 'Demo', 
    theme: ThemeData(primarySwatch: Colors.blue),
    home:  Scaffold(
      appBar: AppBar(title: const Text('GET HTTP EXAMPLE')),
      body: Center(
        child:FutureBuilder<Album>(
          future: futureAlbum,
          builder: (context, snapshot){
           if(snapshot.connectionState == ConnectionState.done){
            if (snapshot.hasData){
              return Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Text(snapshot.data!.title),
                  TextField(controller: _controller,
                  decoration: const InputDecoration(hintText: 'Update Title')),
                  ElevatedButton(onPressed: (){
                    setState(() {
                      futureAlbum =updateAlbum(_controller.text);
                    });
                  }, child: const Text('Update Data'))
                ],
              );
            }
           } else if (snapshot.hasError){
            return Text("${snapshot.error}");
           }
            return const CircularProgressIndicator();
          }
        ))));


}
}


