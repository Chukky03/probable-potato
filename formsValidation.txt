
import 'package:flutter/material.dart';


void main() => runApp(const Myapp());

class Myapp extends StatelessWidget {
  const Myapp({Key? key}): super(key: key);

 @override
 Widget build (BuildContext context){
   const appTitle ='Demo';

  return MaterialApp(title:appTitle ,
  home: Scaffold(appBar: AppBar(title:const Text(appTitle)),
  body: myCustomForm(),
  ),
  
  );
 }

}

class myCustomForm extends StatefulWidget{

const myCustomForm({Key? key}) : super(key: key);

@override
myCustomFormState createState() => myCustomFormState();
}

class myCustomFormState extends State<myCustomForm> {

  final _formkey = GlobalKey<FormState>();
  final _textController = TextEditingController();
  

  @override
  void dispose(){
   _textController.dispose();
   super.dispose();
  }



  @override
  Widget build(BuildContext context){
    
    return Form(key: _formkey,
    child: Column(children: [TextFormField(
      controller: _textController,
    validator: (value) {
      if (value ==null || value.isEmpty ){
        return 'Space cannot be empty';
      }
      return null;
    },
    ),
    Padding(padding: const EdgeInsets.symmetric(vertical:16.0),
    child:ElevatedButton(onPressed: (){
      if (_formkey.currentState!.validate()){
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('Text was: ${_textController.text}')));
      }
    }, child: const Text('Submit')
    ) ,
    )
    ]),);
  }
}


<<<<For one form>>>>>





<<<< for more than one form with a snack bar that says "You have updated your details"



import 'package:flutter/material.dart';


void main() => runApp(const Myapp());

class Myapp extends StatelessWidget {
  const Myapp({Key? key}): super(key: key);

 @override
 Widget build (BuildContext context){
   const appTitle ='Demo';

  return MaterialApp(title:appTitle ,
  home: Scaffold(appBar: AppBar(title:const Text(appTitle)),
  body: myCustomForm(),
  ),
  
  );
 }

}

class myCustomForm extends StatefulWidget{

const myCustomForm({Key? key}) : super(key: key);

@override
myCustomFormState createState() => myCustomFormState();
}

class myCustomFormState extends State<myCustomForm> {

  final _formkey = GlobalKey<FormState>();
  final _textController = TextEditingController();
  final _textController1 = TextEditingController();
  final _textController2 = TextEditingController();
  

  @override
  void dispose(){
   _textController.dispose();
   super.dispose();
   _textController1.dispose();
   super.dispose();
   _textController2.dispose();
   super.dispose();
  }



  @override
  Widget build(BuildContext context){
    
    return Form(key: _formkey,
    child: Column(children: [TextFormField(
      controller: _textController,
    validator: (value) {
      if (value ==null || value.isEmpty ){
        return 'Space cannot be empty';
      }
      return null;
    },
    ),
      TextFormField(
      controller: _textController1,
    validator: (value) {
      if (value ==null || value.isEmpty ){
        return 'Space cannot be empty';
      }
      return null;
    },
    ),
      
      TextFormField(
      controller: _textController2,
    validator: (value) {
      if (value ==null || value.isEmpty ){
        return 'Space cannot be empty';
      }
      return null;
    },
    ),
    Padding(padding: const EdgeInsets.symmetric(vertical:16.0),
    child:ElevatedButton(onPressed: (){
      if (_formkey.currentState!.validate()){
      ScaffoldMessenger.of(context).showSnackBar(
       const SnackBar(
          content: Text('You have Updated your details ')));
      }
    }, child: const Text('Submit')
    ) ,
    ),

    ]),);
  }
}


