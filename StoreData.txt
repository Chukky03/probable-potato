

import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';
import 'dart:async';
import 'dart:io';

void main(){
  runApp(
    MaterialApp(title: 'demo', home: FlutterDemo(storage: CounterStorage()))
  
  );

}

class CounterStorage{

  //THIS IS THE DOCUMENTS DIRECTORY OR AppData
  Future<String> get _localPath async{
    final directory = await getApplicationDocumentsDirectory();
    return directory.path;
  }
  //TEXT FILE INSIDE OF DOC DIR

Future<File> get _localFile async{
  final path = await _localPath;
  return File ('$path/counter.txt');

}
// READ WHAT'S INSIDE counter.txt above
Future<int> readCounter() async{
try{
  final file = await _localFile;
  final contents = await file.readAsString();
  return int.parse(contents);
}catch(error){
  return 0;
}
}
  
  Future<File> writeCounter(int counter) async{
    final file = await _localFile;
    return file.writeAsString('$counter');
  }

}

class FlutterDemo extends StatefulWidget{
  const FlutterDemo({super.key, required this.storage});

final CounterStorage storage;

@override
State<FlutterDemo> createState() => _FlutterDemo();
 

}


class _FlutterDemo extends State<FlutterDemo>{
  int _counter = 0;

  @override
  void initState(){
    super.initState();
    widget.storage.readCounter().then((value){
      setState(() {
        _counter=value;
      });
    }
    );
  }

  Future<File> _incrementCounter(){
  setState(() {
    _counter++;
  });
  return widget.storage.writeCounter(_counter);
}

@override
Widget build(BuildContext context){
  return Scaffold(
    appBar: AppBar(title: const Text('APP BAR')),
    body: Center(child: Text('Button was Tapped: $_counter'),),

    floatingActionButton: FloatingActionButton(onPressed: _incrementCounter,
    child: const Icon(Icons.add),),
  );
}

}



<<<< How to store previous data or assignment>>>>>
<<< This code helps you to continue where you stopped in an application>>>>
